<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Device Actions on endpointmgt.com</title>
        <link>http://localhost:1313/tags/device-actions/</link>
        <description>Recent content in Device Actions on endpointmgt.com</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 28 Aug 2025 09:10:17 +0100</lastBuildDate><atom:link href="http://localhost:1313/tags/device-actions/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Intune Multi-Admin Approval: Keeping Your Admins Honest (and Safe)</title>
        <link>http://localhost:1313/p/multiappapproval/</link>
        <pubDate>Thu, 28 Aug 2025 09:10:17 +0100</pubDate>
        
        <guid>http://localhost:1313/p/multiappapproval/</guid>
        <description>&lt;p&gt;If you’ve ever woken up in a cold sweat wondering, “What if one of my admin accounts got compromised and someone wiped 5,000 devices overnight?” Firstly, you need more restful sleep, but second, Microsoft has finally heard you.&lt;/p&gt;
&lt;p&gt;Enter Multiple Administrative Approval (MAA) in Intune. Think of it like that classic buddy system from school trips, you can’t make a move without a partner watching you. Except instead of making sure you don’t wander off at the museum gift shop, MAA makes sure no single admin can make big changes to your tenant without someone else giving the thumbs up. Good Right?&lt;/p&gt;
&lt;p&gt;Here’s the gist:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You create access policies that protect certain things (apps, device wipe actions, scripts, RBAC changes, and even the MAA policies themselves).&lt;/li&gt;
&lt;li&gt;When an admin makes a change, Intune says, “Not so fast, cowboy”, and holds that request hostage until another admin, someone in your designated approver group reviews it and hits Approve.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s a neat safeguard, but before you run off to secure the kingdom, let’s talk about what you can and can’t do with it.&lt;/p&gt;
&lt;h2 id=&#34;the-big-gotcha-its-all-or-nothing&#34;&gt;The Big Gotcha: It’s All or Nothing
&lt;/h2&gt;&lt;p&gt;When you set an access policy, it applies tenant-wide. That means all admins are covered by it, regardless of whether they’re junior Service Desk tech or your top-level cloud architect. You can’t yet assign policies to specific groups, devices, or scenarios.&lt;/p&gt;
&lt;p&gt;For example, wouldn’t it be brilliant if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A small group of trusted admins could wipe devices immediately, while everyone else required approval?&lt;/li&gt;
&lt;li&gt;Or if corporate-owned devices could be wiped without fuss, but BYOD devices required approval because, let’s face it, accidentally nuking someone’s personal phone is a fast track to HR complaints or even worse?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sadly, that flexibility isn’t here—at least not yet. Right now, it’s a blanket rule for everyone.&lt;/p&gt;
&lt;h2 id=&#34;why-its-still-worth-it&#34;&gt;Why It’s Still Worth It
&lt;/h2&gt;&lt;p&gt;Limitations aside, MAA is a strong step toward protecting against compromised accounts and fat-finger mistakes. Even the best admins occasionally click the wrong thing, and having that extra checkpoint could save your bacon.&lt;/p&gt;
&lt;p&gt;The process also builds transparency: business justifications are logged, approvals and rejections are documented, and everything shows up in the audit logs. That’s not just good for governance, it’s fantastic for compliance conversations when someone inevitably asks, “So, who approved this?”&lt;/p&gt;
&lt;h2 id=&#34;living-with-maa&#34;&gt;Living with MAA
&lt;/h2&gt;&lt;p&gt;If you’re going to use it, here are a few practical tips:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have at least two active admins (sounds obvious, but you’d be surprised how often tenants rely on a single person).&lt;/li&gt;
&lt;li&gt;Communicate with your approvers. There’s no built-in notification system for new requests yet, so if it’s urgent, you’ll need to poke them directly.&lt;/li&gt;
&lt;li&gt;Keep an eye on requests, pending changes expire after 30 days if nobody acts on them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;lets-demonstrate-how-to-configure-it&#34;&gt;Lets demonstrate how to configure it
&lt;/h2&gt;&lt;p&gt;Alright, so you’re sold on the idea and want to set this up. The good news? The process isn’t rocket science. The bad news? You’ll need two admin accounts handy, because you can’t approve your own request (no cheating the system).&lt;/p&gt;
&lt;h3 id=&#34;create-the-access-policy&#34;&gt;Create the Access Policy
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Sign in to the Microsoft Intune admin center with your first admin account.&lt;/li&gt;
&lt;li&gt;Create a group in Entra or if your old fashioned (and stuck in your ways), Active Directory and wait for the group to sync up. (I won&amp;rsquo;t start on why using AD groups in Entra with sync&amp;rsquo;d admins is a bad idea, that&amp;rsquo;s for another day.). This group will act as the Approvers List. Once a protection action is triggered, it&amp;rsquo;ll be this group of users that can approve the action. Even if they&amp;rsquo;re already a GA or Intune admin. Not in this group, they can&amp;rsquo;t approve it!&lt;/li&gt;
&lt;li&gt;Head over to Tenant administration &amp;gt; Multi Admin Approval &amp;gt; Access policies.&lt;/li&gt;
&lt;li&gt;Select Create.&lt;/li&gt;
&lt;li&gt;On the Basics page, give your policy a name, add an optional description (bonus points if it’s funny enough to make future-you smile), and choose the profile type you want to protect (Apps, Scripts, Device actions, etc.).&lt;/li&gt;
&lt;li&gt;On the Approvers page, select Add groups and pick which group of admins will approve changes for this policy.
Important: You can’t exclude groups or get fancy with scoping here—it’s one group, one policy, all users.&lt;/li&gt;
&lt;li&gt;Review your settings, and add a business justification for the approver.&lt;/li&gt;
&lt;li&gt;Then hit Submit for Approval. Something like this;
&lt;img src=&#34;http://localhost:1313/p/multiappapproval/post/MultiAdminApproval/img/CreatePolicy.png&#34;
	width=&#34;770&#34;
	height=&#34;655&#34;
	srcset=&#34;http://localhost:1313/p/multiappapproval/post/MultiAdminApproval/img/CreatePolicy_hu_33e193bafc98ba56.png 480w, http://localhost:1313/p/multiappapproval/post/MultiAdminApproval/img/CreatePolicy_hu_77960a514c7f29c4.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Sign In&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;282px&#34;
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, your shiny new policy is created, but it’s not live until it’s approved.&lt;/p&gt;
&lt;h3 id=&#34;looking-ahead&#34;&gt;Looking Ahead
&lt;/h3&gt;&lt;p&gt;Will Microsoft eventually let us scope approvals to specific groups or device types? One can hope. The ideal future is granular control: different approval paths for different admin roles, device ownership types, or even for high-risk vs. low-risk actions.&lt;/p&gt;
&lt;p&gt;Until then, MAA is a solid foundation. It might not be the dream scenario where your junior admin can reset a password but needs approval to delete a fleet of laptops—but it’s still a powerful safety net for every organization running Intune.&lt;/p&gt;
&lt;p&gt;And hey, if nothing else, it makes sure your admins are talking to each other. Who knew security could double up as team bonding?&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
