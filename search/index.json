[{"content":"If you’ve ever woken up in a cold sweat wondering, “What if one of my admin accounts got compromised and someone wiped 5,000 devices overnight?” Firstly, you need more restful sleep, but second, Microsoft has finally heard you.\nEnter Multiple Administrative Approval (MAA) in Intune. Think of it like that classic buddy system from school trips, you can’t make a move without a partner watching you. Except instead of making sure you don’t wander off at the museum gift shop, MAA makes sure no single admin can make big changes to your tenant without someone else giving the thumbs up. Good Right?\nHere’s the gist:\nYou create access policies that protect certain things called a \u0026ldquo;protection action\u0026rdquo; (apps, device wipe actions, scripts, RBAC changes, and even the MAA policies themselves). When an admin makes a change, with a policy configured to protect an action, Intune says, “Not so fast, cowboy”, and holds that request hostage until another admin, someone in your designated approver group reviews it and hits Approve. It’s a neat safeguard, but before you run off to secure the kingdom, let’s talk about what you can and can’t do with it.\nThe Big Gotcha: It’s All or Nothing When you set an access policy, it applies tenant-wide. That means all admins are covered by it, regardless of whether they’re junior Service Desk tech or your top-level cloud architect. You can’t yet assign policies to specific groups, devices, or scenarios.\nFor example, wouldn’t it be brilliant if:\nA small group of trusted admins could wipe devices immediately, while everyone else required approval? Or if corporate-owned devices could be wiped without fuss, but BYOD devices required approval because, let’s face it, accidentally nuking someone’s personal phone is a fast track to HR complaints or even worse? Sadly, that flexibility isn’t here—at least not yet. Right now, it’s a blanket rule for everyone.\nWhy It’s Still Worth It Limitations aside, MAA is a strong step toward protecting against compromised accounts and fat-finger mistakes. Even the best admins occasionally click the wrong thing, and having that extra checkpoint could save your bacon.\nThe process also builds transparency: business justifications are logged, approvals and rejections are documented, and everything shows up in the audit logs. That’s not just good for governance, it’s fantastic for compliance conversations when someone inevitably asks, “So, who approved this?”\nLiving with MAA If you’re going to use it, here are a few practical tips:\nHave at least two active admin accounts (sounds obvious, but you’d be surprised how often tenants rely on a single person). Both admin accounts require either Intune Admin or the appropriate Multi Admin Approval permissions with Role Based Access Controls (RBAC). Communicate with your approvers. There’s no built-in notification system for new requests yet, so if it’s urgent, you’ll need to poke them directly. Keep an eye on requests, pending changes expire after 30 days if nobody acts on them. How to Configure Alright, so you’re sold on the idea and want to set this up. The good news? The process isn’t rocket science. The bad news? You’ll need two admin accounts handy, because you can’t approve your own request (no cheating the system).\nI\u0026rsquo;ll take you through the process of creating a protected device action of wiping a device. The same process can be followed for other actions.\nCreate the Access Policy Sign in to the Microsoft Intune admin center with your first admin account. Create a group in Entra or if your old fashioned (and stuck in your ways), Active Directory and wait for the group to sync up. (I won\u0026rsquo;t start on why using AD groups in Entra with sync\u0026rsquo;d admins is a bad idea, that\u0026rsquo;s for another day.). This group will act as the Approvers List. Once a protected action is triggered, it\u0026rsquo;ll be this group of users that can approve the action. Even if they\u0026rsquo;re already a GA or Intune admin. Not in this group, they can\u0026rsquo;t approve it! Head over to Tenant administration \u0026gt; Multi Admin Approval \u0026gt; Access policies. Select Create. On the Basics page, give your policy a name, add an optional description (bonus points if it’s funny enough to make future-you smile), and choose the profile type you want to protect (Apps, Scripts, Device actions, etc.). On the Approvers page, select Add groups and pick which group of admins will approve changes for this policy. Important: You can’t exclude groups or get fancy with scoping here—it’s one group, one policy, all users. Review your settings, and add a \u0026lsquo;business justification\u0026rsquo; for the approver. Something like this; Then hit Submit for Approval. At this point, your shiny new policy is created, but it’s not live until it’s approved. You\u0026rsquo;ll see this under My Requests Approve the Policy Sign out of your first admin account and sign back in with a different admin account that’s either an GA, Intune Admin or has the permission Approve MAA within RBAC. Navigate to Tenant administration \u0026gt; Multi Admin Approval \u0026gt; All requests. Find the pending request for your new access policy. Open it up, review the details (including the justification) and add in your approver notes. This is required Then hit Approve request (or reject request if your future self is having second thoughts). You\u0026rsquo;ll then see the policy as approved, if you refresh the page. Complete the Policy You would think, that\u0026rsquo;s it, right? No, it\u0026rsquo;s not! The first admin, now needs to complete the policy before it becomes live.\nSign out of your second admin account and sign back in with the fist admin account. Navigate to Tenant administration \u0026gt; Multi Admin Approval \u0026gt; My requests. You\u0026rsquo;ll see your new policy as approved Select the policy and select Complete request. Now wait! It takes around 10 minutes in my testing for the policy be adopted and the action to be protected. You\u0026rsquo;ll know when it is as you\u0026rsquo;ll see a business justification field, when you try to carry out the protected action. If you don\u0026rsquo;t see it, it\u0026rsquo;s not live yet! What does it look like in action? So you’ve got this far and set up your shiny new access policy. What actually happens when an admin tries to make a change that’s now protected? Let’s walk through it, no popcorn required.\nThe Admin Makes a Change Imagine an admin tries to wipe a device (or maybe deploy a script). Normally, that action would go straight through. But now, when they hit save, Intune steps in and says: “Hold on, explain yourself.” A Business justification box appears at the bottom of the screen. The admin types in why the change is needed—something like “User lost laptop on the train again” (we all know that person). The Request Gets Parked Instead of being processed immediately, the request now sits in limbo under My requests in the Intune admin center. The status will show as Needs approval. The Approver Steps In Another admin, one who’s in the designated approver group, logs into Intune and heads to Tenant administration \u0026gt; Multi Admin Approval \u0026gt; Received requests. They’ll see the pending request, complete with details of what action was attempted, who submitted it, and that all-important business justification. Decision Time The approver can either hit Approve or Reject, and they’ve got a notes field to leave comments—helpful for feedback, or the occasional passive-aggressive remark like “Stop wiping devices on Friday afternoons.” The Requestor Finishes the Job Here’s the twist: even after approval, the original requestor has to go back in and hit Complete before the action actually happens. This ensures the person who started the process is still in the loop. Once completed, the status updates to Completed, and Intune carries out the change. Everyone Stays in the Loop If the request is rejected, the notes from the approver are visible to the requestor, so they know why. Every step is logged in audit logs, so you’ve got the receipts if you need them later. The whole process feels a bit like tagging in a teammate during a wrestling match, one person starts the move, but someone else has to back them up before it lands. It adds a couple of extra clicks, but in exchange, you’re massively reducing the risk of one compromised account (or one tired admin mis-click) causing chaos.\nLooking Ahead Will Microsoft eventually let us scope approvals to specific groups or device types? One can hope. The ideal future is granular control: different approval paths for different admin roles, device ownership types, or even for high-risk vs. low-risk actions.\nUntil then, MAA is a solid foundation. It might not be the dream scenario where your junior admin can reset a password but needs approval to delete a fleet of laptops—but it’s still a powerful safety net for every organization running Intune.\nAnd hey, if nothing else, it makes sure your admins are talking to each other. Who knew security could double up as team bonding?\n","date":"2025-08-28T09:10:17+01:00","image":"https://endpointmgt.com/p/multiappapproval/post/MultiAdminApproval/img/cover_hu_bb8005463b40440b.png","permalink":"https://endpointmgt.com/p/multiappapproval/","title":"Intune Multi-Admin Approval: Keeping Your Admins Honest (and Safe)"},{"content":"I don\u0026rsquo;t know about you but as soon as you hear the word Kerberos, I immediately want to shy away. For it sounds complicated and scary but what is it? Well, in simple terms, it\u0026rsquo;s a modern authentication that can allow organisations to reduce the reliance on passwords on Windows devices.\nWhy might you need it? Imagine a world where you\u0026rsquo;d like to have Entra ID /Azure AD joined devices, authenticating back to on-premise resources. As long as you have hybrid user identities sync\u0026rsquo;d via AD sync connect, you can have just that but what if you wish to make use of Windows Hello for Business? Then you\u0026rsquo;ll start to run into some problems and users will be prompted for re-authentication. Why, well the on-premise resources, don\u0026rsquo;t trust your WHfB authentication token. This is where Cloud Kerberos trust comes to aid. It allows for WHfB configured devices to access on-premise resources without re-authentication and provide a secure authentication trust between Entra ID and the on-premise AD.\nAlternatives As with everything, in short Yes there are but I\u0026rsquo;d consider these older technology. You have the choice of using a key trust or certificate trust. With the later, even if you have your own PKI infrastructure, I still wouldn\u0026rsquo;t recommend it. It\u0026rsquo;s much harder to upkeep and to be honest, it\u0026rsquo;s a royal pain, comes with poor user experience (at step up stage) and doesn\u0026rsquo;t really offer anything else for the complexity that it brings. MIcrosoft themselves, recommend Cloud Kerberos Trust!\nSo how does it work? What are the supported scenarios? So imagine, you\u0026rsquo;re moving to the cloud. Existing devices are hybrid domain joined. New pilot devices are Entra joined via Windows Autopilot and you\u0026rsquo;re slowly moving workloads over from on-premise. How does this fit? Well in short, it supports both. So you can deploy CKT, deploy one configuration to devices or users and it\u0026rsquo;ll, well just work!\nDevices do need support Windows Hello for business for all this to work but that comes down to the device. I\u0026rsquo;ll let you research this part!\nHow to deploy it\u0026hellip; This comes in two parts, setting up the kerberos trust and deploying Windows Hello configuration. Do not deploy the Windows Hello configuration to devices or users, until the Cloud Kerberos configuration is in place. Doing so will mean that users will need to delete their WHfB and start again for it to take place.\nSet up Cloud Kerberos Trust Step 1 - First, ensure TLS 1.2 for PowerShell gallery access.\n1 [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12 Step 2 - Install the AzureADHybridAuthenticationManagement PowerShell module.\n1 Install-Module -Name AzureADHybridAuthenticationManagement -AllowClobber Step 3 - Create the new Entra ID Kerberos Server object in Active Directory\n1 2 $GAUser = \u0026#34;PlaceYourAdminCreds@tenantdomain.com\u0026#34; Set-AzureADKerberosServer -Domain $env:UserDNSDomain -UserPrincipalName $GAUser Step 4 - Now you\u0026rsquo;re done but lets verify it\n1 Get-AzureADKerberosServer You should see something like this\u0026hellip;\nIf you look on a domain controller within Users and Computer, you should see 2 new objects created. These act like a read only domain controller. They provide the mechanism to provide part of the Primary Refresh Token (PRT) that users need to authenticate.\nDo not delete/move/rename these 2 objects. To do so will break your new Cloud Kerberos Trust!\nIntune Configuration Create Windows Hello for Business Configuration Profile Now it\u0026rsquo;s time to create and deploy the WHfB configuration. Here is an example settings catalog profile to deploy WHfB will all the necessary settings. Make amendments as you see fit, the important one is highlighted in yellow. Use Cloud Trust for on prem auth, just make sure that\u0026rsquo;s enabled!\nDeploy it to users or devices. Once the user logs back into the device, they should receive a message to setup Windows Hello. User Setup This works in the exactly the same way as it would without kerberos trust so the user won\u0026rsquo;t notice anything different. They sign in, go through the MFA Prompt and setup faceID, fingerprintID and then a PIN code. Once set, they\u0026rsquo;ll be logged in and WHfB will be the new default sign in option.\nThis is one of the biggest benefits of using this method. Whereas using a key trust or certificate trust, means that when a user sets up for the first time, they can\u0026rsquo;t immediately start using it, they have to wait upwards of 60 mins for the device objects in Active Directory to be updated. Not the case with Cloud Kerberos Trust. Use it straight away!\nUser Experience. I\u0026rsquo;m not going to give you a screen shot of the setup process or accessing on premise file shares. As long as the user has line of sight to the file share, to test Cloud Kerberos, have them sign in with WHfB on the device and access a file share. If it just opens, success! If it prompts for a username/password, we have problems! I\u0026rsquo;d run the Get-AzureADKerberosServer to check the status.\nThanks for reading!\n","date":"2025-07-05T16:56:34+01:00","image":"https://endpointmgt.com/p/whfbcloudkerberos/post/WHfBCloudKerberos/img/cover_hu_92706ff7ad7eb60.png","permalink":"https://endpointmgt.com/p/whfbcloudkerberos/","title":"Windows Hello for Business and Cloud Kerberos Authentication"},{"content":"On a recent engagement in my day job, I had a challenge to deploy Solus3 agent to Microsoft Entra joined devices. These devices were enrolled via Windows Autopilot and no longer domain joined. The existing deployment deployed the Solus3 agent via a targeted AD OU, which deploys the agent via the deployment server. This of course, isn’t possible with Entra joined devices.\nTo get this to work, its a wrap within a wrap. Keeping it as close the production or what your using or how you might already deploy the app as close the the existing deployment but with a few tweaks. Anyways for now, here are the steps to deploy the agent via Microsoft Intune. After all, it’s why you’re here 🙂\nIt should be noted that this approach to deployment is NOT supported. Do so at your own risk. You may still need to keep an instance of a supported deployment. This will allow you to replicate the any issue on a supported deployment for escalation.\nPreparation You’ll need to gather the relevant files and create a folder for the install files, called SIMS. In my example, I’ve placed the SIMS folder on the root of the D:\\ drive. Copy the following files over to the SIMS folder.\nSOLUS3AgentInstaller_x86.msi SOLUS3AgentInstaller_x64.msi Solus3.Keys.DeploymentService.Public.xml First installer File Create a .bat file named Solus3AgentInstaller.bat with the following commands.\n1 cscript.exe //nologo AgentInstaller.js \u0026#34;agent_installer.log\u0026#34; \u0026#34;net.tcp://localhost:52966\u0026#34; \u0026#34;net.tcp://Your-SIMS-Server:52965\u0026#34; \u0026#34;Solus3.Keys.DeploymentService.Public.xml\u0026#34; \u0026#34;SOLUS3AgentInstaller_x86.msi\u0026#34; \u0026#34;SOLUS3AgentInstaller_x64.msi\u0026#34; Update the net.tcp://Your-SIMS-Server:52965 with your server location and save the .bat file in your newly created SIMS folder.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 var wshShell, wshSysEnv; var fso, f1, typeLib; fso = new ActiveXObject(\u0026#34;Scripting.FileSystemObject\u0026#34;); typeLib = new ActiveXObject(\u0026#34;Scriptlet.TypeLib\u0026#34;); wshShell = WScript.CreateObject(\u0026#34;WScript.Shell\u0026#34;); var logFileName = WScript.Arguments(0); var agentAddress = WScript.Arguments(1); var dsAddress = WScript.Arguments(2); var keyFileName = WScript.Arguments(3); var msi32 = WScript.Arguments(4); var msi64 = WScript.Arguments(5); var msi = \u0026#34;\u0026#34;; if (is64()) msi = msi64; else msi = msi32; wshShell.Run(\u0026#34;msiexec.exe /qb /lv* \\\u0026#34;\u0026#34; + fso.BuildPath(wshShell.Environment(\u0026#34;SYSTEM\u0026#34;)(\u0026#34;TEMP\u0026#34;), logFileName) + \u0026#34;\\\u0026#34; /i \\\u0026#34;\u0026#34; + wshShell.CurrentDirectory + \u0026#34;\\\\\u0026#34; + msi + \u0026#34;\\\u0026#34; AGENTSERVICEADDRESS=\\\u0026#34;\u0026#34; + agentAddress + \u0026#34;\\\u0026#34; AGENTID=\\\u0026#34;\u0026#34; + typeLib.Guid.toString().substring(0, 38) + \u0026#34;\\\u0026#34; DEPLOYMENTSERVERADDRESS=\\\u0026#34;\u0026#34; + dsAddress + \u0026#34;\\\u0026#34; RSAKEYPATH=\\\u0026#34;\u0026#34; + wshShell.CurrentDirectory + //\u0026#34;\\\u0026#34; PREDEFINEDAGENTTARGETS=\\\u0026#34;Sims Fms Discover\u0026#34; + \u0026#34;\\\u0026#34;\u0026#34;, 0, true); function is64() { var shell = WScript.CreateObject(\u0026#34;WScript.Shell\u0026#34;); return (wshShell.Environment(\u0026#34;SYSTEM\u0026#34;)(\u0026#34;PROCESSOR_ARCHITECTURE\u0026#34;).indexOf(\u0026#34;64\u0026#34;) + 1); } Save the AgentInstaller.js file in your newly created SIMS folder. Your folder should then look something like this.\nWrapping Time I’ll assume you already know how to wrap packages via Microsoft Win32 Content Prep Tool. Packing the content should look something like this…\nUpload Time 1 2 3 Install Command: Solus3AgentInstaller.bat Uninstall Command: msiexec.exe /qn /x {PRODUCT-CODE} /lv* “%TEMP%\\uninstall.log” Install behavior: System It should look like this…\nFor the detection, we’ll use a file installed as part of the installer\n1 2 3 4 5 Rule Type: File Path: C:\\Program Files\\SOLUS3\\AgentService File or Folder: Infrastructure.dll Detection Method: File or folder exists Associated with a 32-bit app on 64-bit clients: No It should look like this…\nDeployment Time Assign your newly created and updated app to users or devices as you desire.\nSuccess? You should now have the app installed.\nNext Steps. Now that you have the Agent installed. You’ll need to login to the Solus3 server and deploy the Sims package to the device from the deployment server.\nWhile this will deploy the Solus3 agent to devices, what this doesn’t take care of is ongoing updates. You’ll need to package any updates to the Solus3 agent. It’s beyond the scope of this article.\nFor now and until the next post, I wish you well…\n","date":"2025-01-29T19:45:32+01:00","image":"https://endpointmgt.com/p/deploysims/post/InstallSims/img/cover_hu_fcfa45c016b79c7b.png","permalink":"https://endpointmgt.com/p/deploysims/","title":"Deploy SOLUS 3 for SIMS"},{"content":"Missing this app in your M365 tenant and need it for Conditional Access? This was a recent issue that I came across while working on a tenant to tenant migration project. The Issue? Re-enrolling fully managed (COPE) devices and the requirement to exclude the enrollment from MFA prompts. The only problem, only the Microsoft Intune app existed.\nAs you can see below, the Microsoft Intune app is missing from the Mobility MDM and WIP page.\nAs you can also see, it’s missing from the Target Resources within the Conditional Access Policies.\nTo resolve the issue, we need a way of recreating the app that Microsoft will recognise as the Intune enrolment app, we can’t simply create an Enterprise Application called the same name. We’ll do this by creating a new Service Principle.\nFirst, we’re going to login to Entra ID using Powershell.\nConnect-AzureAD\nLets now check if the app exists, run the get command to see if it exists.\nGet-AzureADServicePrincipal -AppId d4ebce55-015a-49b5-a083-c84d1797ae8c\nIf it returned nothing back and simply returned back to a new command line, then we need to create the app. We’ll first clear any record of it from the tenant by removing the SP.\nRemove-AzureADServicePrincipal -AppId d4ebce55-015a-49b5-a083-c84d1797ae8c\nOnce complete, we’re now going to recreate it. Don’t make any changes to the command.\nNew-AzureADServicePrincipal -AppId d4ebce55-015a-49b5-a083-c84d1797ae8c\nTo confirm it’s created, PS will show you the new Service Principle with the correct display name of the require Intune enrollment app.\nWe can now also see the app listed in the Mobility page\nAnd, if you now select the app from the CA policy, it should be listed. You’ll need to refresh the page if you still have it open from checking previously.\nAnd your done. Now all you have to do is save your CA policy and test the results.\n","date":"2024-01-22T10:59:19+01:00","image":"https://endpointmgt.com/p/recreateenrolmentapp/post/MissingEnrolmentApp/img/cover_hu_2b3e1573072ccfca.png","permalink":"https://endpointmgt.com/p/recreateenrolmentapp/","title":"Missing Microsoft Enrolment App"},{"content":"Today we’re going to take a quick look at, MAM for Windows. But what is it? MAM stands for Mobile Application Protection and Windows, instead a mobile OS, so what does Microsoft mean when they say MAM for Windows? Well, it’s in essence, it’s App Protection for Windows. It applies to the Edge Browser and can provide organisations with the ability to provide their end users with secure M365 access on personally owned unmanaged devices while applying some level of data protection controls.\nSo we know what is it but how does it work? If all the requirements are met, once setup, the user just has to sign in to Office and they’ll be taken through the process and well apart from one slightly misleading screen where it could all come crashing down, more on that later, it’s a fairly easy process for users to follow and makes accessing M365 almost easier.\nWe’ll take a look at\nThe prerequisites The users experience both in setup and use The configuration from an Intune Admins perspective What else did we see? What didn’t we see that we maybe expected? What are the prerequisites… If you look at the Microsoft tech announcement, it will told us that it’s Windows 11 and Microsoft Edge for Windows ver. 117 and above. With the updated learn article Data protection for Windows MAM | Microsoft Learn, this was changed to support Windows 10 running build 19046.3636 and above with KB5031445 or later.\nWindows 10, build 19046.3636, KB5031445 or later and Windows 11, build 10.0.22621.2506, KB5031455 (22H2) or later Microsoft Intune (2309 release) Microsoft Edge (v117 stable branch and later for Windows 11 and v118.0.2088.71 and later for Windows 11) Windows Security Center (v 1.0.2310.2002 and later) if using Device Risk scores Users must be assigned a licence for Microsoft Intune and a Conditional Access P1 or P2 licence. The Setup… The first thing users will see when they sign in is a conditional access message saying that they’ll need to sign into the Edge Browser or access the account from a registered device. (we’ll not get into the later, you never know, I may do another post on this separately).\nHere’s a quick step by step run though of what it looks like for the user\nthey’ll sign into Office.com with their organisational account User will be asked to create a work profile, they simply need to select the account and select the Sign in to Sync data and they’ll then be prompted for their password. This is where it gets interesting, the user is provided with a a couple of options on this screen. We need them to register the device but not enrol and allow the organisation to manage the device. Managed devices will block MAM for Windows from working so the user has to untick Allow my organisation to manage my device and then select OK. they only sign into the app by selecting No, this won’t register the device and they’ll get stuck in a loop with MS Edge asking them to sign in and create a work profile. You have been warned.\nOnce signed in, the work profile will be created, a couple of customisation screens will appear, they can tailor the browser or simply just click Continue, Next and Done. And its done. A user will now have SSO when they use the Microsoft Edge browser using the newly created Work Profile.\nIn Practice… Here’s the subtle difference between the Personal and Work profiles signed in and how you can select between the two.\n, Trying to download files from OneDrive / SharePoint is blocked (as per our requirement) along with the ability to download the Office installer, rather unexpectedly but when you think about it logically, you can understand why.\n, How was it configured… Configuration is carried out in 2 parts. You first have to great an App Protection Policy, followed by a Conditional Access Policy to enforce it.\nApp Protection The App Protection Policy is created within Intune here – Apps – Microsoft Intune admin center and you’ll need the role of Intune Admin or Global Admin (GA) to create this policy. The policy is broken down into 2 areas;\nData protection Health Checks (otherwise known as Conditional Launch) Data Protection allows admins to select where the managed profile can receive data from, send and receive organisational data, whether to allow cut, copy and past and decide if users can print organisational data.\nHealth Checks allow admins to set criteria that must be met before a user can access M365 data via the work profile, such as Minimum OS, Minimum Edge version and id their account is disabled. It can also use the devices risk score from Microsoft Defender for Endpoint if used to secure unmanaged devices. (we’ll not cover this aspect here)\nOnce the App Protection Policy is configured, it would be prevalent to assign this to a test group of users before deploying this to production.\nConditional Access The Conditional Access Policy is created within Intune or Entra ID – Conditional Access – Microsoft Intune admin center and you’ll need the role of Conditional Access Admin or Global Admin (GA) to create this policy.\nThis article isn’t designed to teach you how to use CA policies, if you are unfamiliar with these, improve your knowledge here – What is Conditional Access in Microsoft Entra ID? | Microsoft Learn\nBelow is the policy that I created, targeting O365 apps, on windows, via a browser to require app protection. My policy did not follow the Microsoft guidance to either require app protection or require a compliant device. Consider your use case carefully.\nWhat else did we see… An interesting one here, the Minimum OS was originally set to block older OS but regardless of the version of OS, I found that it always blocked it, even if the OS version was higher. As you can see from below, I changed this to warn so that I could continue but it’s still complaining, despite the Windows version being equal.\nWhat didn’t see see or would like For me, it’s around 2 aspects.\nThe user setup process is confusing that users have to untick the box or face having their device managed. This could be must tidier if Microsoft revised this part of the process.\nThe second is around the app protection policy with there being no access requirements that you get on both iOS and Android App Protection Policies. This means that admins can’t set a PIN or password requirement for users. This missing feature alone may rule out this being a viable option for some organisations.\nFurther Info Here’s the official docs from Microsoft\nData protection for Windows MAM | Microsoft Learn Frequently asked questions about MAM and app protection | Microsoft Learn Conditional Access – Require app protection policy for Windows | Microsoft Learn ","date":"2023-10-13T11:18:38+01:00","image":"https://endpointmgt.com/p/mamforwindows/post/MamForWindows/Img/cover_hu_480cb478178bc1c5.png","permalink":"https://endpointmgt.com/p/mamforwindows/","title":"MAM for Windows"},{"content":"If you’re in a Hybrid environment using SCCM and Intune already or in the process of moving to a Hybrid deployment, a decision that will need to be made is where you direct users to install applications.\nMany of you may have already deployed the company portal but in this post; I’ll look at the benefits of deploying company portal to Windows devices, how to deploy it to devices, what’s visible within Company Portal and what the user experience is.\nWhy Should we move I’ll keep this part brief as Microsoft already do a very good job of making recommendations on why you should move but for me, it’s about consistency for users. Giving a user a similar user experience across platform. Users may already have a MacOS or iOS device are already used to using Company Portal for obtain apps. It’s also the place to go when the device compliance workload has been moved and users need to check if and why their devices are non-compliant. Here’s what Microsoft have to say… Install the Intune Company Portal on devices | Microsoft Learn\nHow to deploy Company Portal In this example, we’ll use the new Microsoft store experience natively built into Intune.\nOpen Intune via https://endpoint.microsoft.com as a Global Admin or Intune Administrator. Navigate to Apps\u0026gt;Windows Devices\u0026gt; Add App, select the App type, “Microsoft Store app (new)”\nSearch and select Company Portal\nConfirm the app details.\nOne thing to note is with the new store experience, apps do not have application Icons (a bit like SCCM doesn’t, you;\nClick Next and then decide where to deploy the app to before clicking next and Create.\nDecide on what’s available in Company Portal Now that you’ve deployed the Company Portal, you need to decide what you want to show and hide from users. Microsoft recently released new options to give administrators control over what users see. To access these new controls, following these steps to configure you’re desired settings.\nHere you will see the options available under Configuration, the options are;\nAzure AD Enterprise Applications Office Online Applications Configuration Manager Applications The defaults are shown above. To change these defaults –\nScroll up to edit, scroll down to App Sources and change the hide to show as necessary before selecting Review and Save.\nUser Notification and improving the user experience Now that the app is deployed, apps are displayed within Company Portal. When it comes time to deploy a new app or app update, we don’t really want users to be notified by Software Center. To prevent this, we need to update the SCCM client settings.\nOpen SCCM Admin Console as a Full Administrator Navigate to Administration\u0026gt;Client Settings, right click and create a Custom Device Client setting\n!Configuration Manager Client Settings](img/image-8.png)\nGive the client device setting a name, I’ve gone for “Company Portal Workload”, tick the option of software centre\nSelect on Software Center and under device settings, change the select the user portal from Software Center to Company Portal and click OK\nOnce created, deploy this new client setting profile to a suitable device collection\nNow that these settings are deployed, when an app is deployed from SCCM, users will receive any notifications that you have configured as part of the deployment within Company Portal.\nOther things to consider Although not covered within this article, it should be noted that in order to follow this post, the Application workload slider would need to be moved from Software Center to either Pilot or all the way over to Intune.\nEnvironments without a Cloud Management Gateway (CMG), for devices that are not on a VPN or within the corporate LAN, apps deployed from SCCM will need line of sight connectivity to SCCM for these apps to download and install. If you have a CMG or an always on VPN, remote devices will still be able to download and install apps from Software Center.\nOnce you’re happy that everything is working as it should, you can start to think about removing Software Center from end user devices but that’s for another day (and post)\nThanks for reading.\n","date":"2022-11-22T14:40:57+01:00","image":"https://endpointmgt.com/p/companyportal/post/CompanyPortal/img/cover_hu_ad84f352905628db.png","permalink":"https://endpointmgt.com/p/companyportal/","title":"Company Portal Set up"}]